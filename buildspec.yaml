version: 0.2
phases:
    install:
        runtime-versions:
            golang: 1.18
    pre_build:
        on-failure: ABORT
        commands:
            - echo Logging in to Amazon ECR...
            - aws --version
            - _PASSWD=$(echo ${REPO_ECR} | cut -d\/ -f1)
            - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${_PASSWD}
            - REPOSITORY_URI=${REPO_ECR}
            - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
            - IMAGE_TAG=${COMMIT_HASH:=latest}
    build:
        on-failure: ABORT
        commands:
            - echo Starting test! `date`
            - go mod init main_test && go get -u github.com/gorilla/mux && go mod tidy
            - go test
            - echo Build started on `date`
            - echo Building the Docker image...
            - docker build -t $REPOSITORY_URI:latest .
            - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
            - export K8S_DOCKER_IMG=$REPOSITORY_URI:$IMAGE_TAG
            - echo ${K8S_DOCKER_IMG}
    post_build:
        on-failure: ABORT
        commands:
            - echo Build completed on `date`
            - echo Pushing the Docker images...
            - docker push $REPOSITORY_URI:latest
            - docker push $REPOSITORY_URI:$IMAGE_TAG
            - echo Setting k8s `date`
            - echo "Update Kube Config"      
            - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
            - echo "Apply changes to kube manifests"
            - TESTE=$(envsubst < k8s/deploy.yml)
            - echo ${TESTE}
            - envsubst < k8s/deploy.yml | kubectl apply -f - 2> /tmp/error.log
            - kubectl apply -f k8s/hpa.yml